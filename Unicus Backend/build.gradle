buildscript {
    ext {
        kotlinVersion = '1.3.11'
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id "org.sonarqube" version "2.6.2"
    id "jacoco"
//    id ("io.gitlab.arturbosch.detekt").version("1.0.0-RC12")
}

group 'nl.bristolsoftware'
version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

jar {
    manifest {
        attributes 'Main-Class': 'unicus.app.kt'
    }
}

dependencies {

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'
    testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.3.2'
    //testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: ':5.3.2'
    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit5', version: '1.3.11'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.2'

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.23.4'
    compile 'org.litote.kmongo:kmongo:3.8.3'
    compile 'io.github.microutils:kotlin-logging:1.5.9'
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.8.2'
    compile group: 'org.springframework.boot', name: 'spring-boot', version: '2.1.0.RELEASE'
    testCompile group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '2.1.1'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

apply plugin: "jacoco"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-allopen'

sonarqube {
    properties {
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    }
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled = true
        csv.enabled = false
        html.destination file("${buildDir}/reports/coverage")
    }
}

allOpen {
}

//test {
//    testLogging {
//        showStandardStreams = true
//    }
//}

//detekt {
//    toolVersion = "1.0.0-RC12"
//    input = files("src/main/kotlin")
//    filters = ".*/resources/.*,.*/build/.*"
//}